// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`custom loader options are supported 1`] = `
"function s(n, e, g) {
  const o = n.map((t) => t.width).reduce((t, i) => i >= e && t >= e ? i >= t ? t : i : i >= t ? i : t, 0);
  return n.find(
    (t) => t.width === o && t.format === g
  );
}
const r = /* @__PURE__ */ new Map();
function c(n) {
  return r.get(n);
}
var a;
(a = c("env")) == null || a.deviceWidths;
const m = [{ url: "/images/test-100.png", width: 100, format: "png" }, { url: "/images/test-200.png", width: 200, format: "png" }], d = {
  imageTypes: ["png"],
  availableWidths: [100, 200],
  aspectRatio: 2,
  imageUrlFor(n, e) {
    var g;
    return (g = s(m, n, e ?? "png")) == null ? void 0 : g.url;
  }
};
console.log(d);
"
`;

exports[`custom query params are supported 1`] = `
"function r(t, e, g) {
  const o = t.map((n) => n.width).reduce((n, i) => i >= e && n >= e ? i >= n ? n : i : i >= n ? i : n, 0);
  return t.find(
    (n) => n.width === o && n.format === g
  );
}
const c = /* @__PURE__ */ new Map();
function m(t) {
  return c.get(t);
}
var a;
(a = m("env")) == null || a.deviceWidths;
const s = [{ url: "/images/image-100w.png", width: 100, format: "png" }, { url: "/images/image-200w.png", width: 200, format: "png" }], d = {
  imageTypes: ["png"],
  availableWidths: [100, 200],
  aspectRatio: 2,
  imageUrlFor(t, e) {
    var g;
    return (g = r(s, t, e ?? "png")) == null ? void 0 : g.url;
  }
};
console.log(d);
"
`;

exports[`filter > it operates on included assets 1`] = `
"function r(i, a, m) {
  const w = i.map((e) => e.width).reduce((e, g) => g >= a && e >= a ? g >= e ? e : g : g >= e ? g : e, 0);
  return i.find(
    (e) => e.width === w && e.format === m
  );
}
const p = /* @__PURE__ */ new Map();
function o(i) {
  return p.get(i);
}
var t;
(t = o("env")) == null || t.deviceWidths;
const s = [{ url: "/images/image-640w.jpg", width: 640, format: "jpeg" }, { url: "/images/image-640w.webp", width: 640, format: "webp" }, { url: "/images/image-750w.jpg", width: 750, format: "jpeg" }, { url: "/images/image-750w.webp", width: 750, format: "webp" }, { url: "/images/image-828w.jpg", width: 828, format: "jpeg" }, { url: "/images/image-828w.webp", width: 828, format: "webp" }, { url: "/images/image-1080w.jpg", width: 1080, format: "jpeg" }, { url: "/images/image-1080w.webp", width: 1080, format: "webp" }, { url: "/images/image-1200w.jpg", width: 1200, format: "jpeg" }, { url: "/images/image-1200w.webp", width: 1200, format: "webp" }, { url: "/images/image-1920w.jpg", width: 1920, format: "jpeg" }, { url: "/images/image-1920w.webp", width: 1920, format: "webp" }, { url: "/images/image-2048w.jpg", width: 2048, format: "jpeg" }, { url: "/images/image-2048w.webp", width: 2048, format: "webp" }, { url: "/images/image-3840w.jpg", width: 3840, format: "jpeg" }, { url: "/images/image-3840w.webp", width: 3840, format: "webp" }], d = {
  imageTypes: ["jpeg", "webp"],
  availableWidths: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
  aspectRatio: 2,
  imageUrlFor(i, a) {
    var m;
    return (m = r(s, i, a ?? "jpeg")) == null ? void 0 : m.url;
  }
};
console.log(d);
"
`;

exports[`imagetools params are supported 1`] = `
"function r(t, e, g) {
  const o = t.map((n) => n.width).reduce((n, i) => i >= e && n >= e ? i >= n ? n : i : i >= n ? i : n, 0);
  return t.find(
    (n) => n.width === o && n.format === g
  );
}
const c = /* @__PURE__ */ new Map();
function m(t) {
  return c.get(t);
}
var a;
(a = m("env")) == null || a.deviceWidths;
const s = [{ url: "/images/image-100w.png", width: 100, format: "png" }, { url: "/images/image-200w.png", width: 200, format: "png" }], d = {
  imageTypes: ["png"],
  availableWidths: [100, 200],
  aspectRatio: 2,
  imageUrlFor(t, e) {
    var g;
    return (g = r(s, t, e ?? "png")) == null ? void 0 : g.url;
  }
};
console.log(d);
"
`;

exports[`it produces expected output 1`] = `
"function r(i, a, m) {
  const w = i.map((e) => e.width).reduce((e, g) => g >= a && e >= a ? g >= e ? e : g : g >= e ? g : e, 0);
  return i.find(
    (e) => e.width === w && e.format === m
  );
}
const n = /* @__PURE__ */ new Map();
function p(i) {
  return n.get(i);
}
var t;
(t = p("env")) == null || t.deviceWidths;
const o = [{ url: "/images/image-640w.png", width: 640, format: "png" }, { url: "/images/image-640w.webp", width: 640, format: "webp" }, { url: "/images/image-750w.png", width: 750, format: "png" }, { url: "/images/image-750w.webp", width: 750, format: "webp" }, { url: "/images/image-828w.png", width: 828, format: "png" }, { url: "/images/image-828w.webp", width: 828, format: "webp" }, { url: "/images/image-1080w.png", width: 1080, format: "png" }, { url: "/images/image-1080w.webp", width: 1080, format: "webp" }, { url: "/images/image-1200w.png", width: 1200, format: "png" }, { url: "/images/image-1200w.webp", width: 1200, format: "webp" }, { url: "/images/image-1920w.png", width: 1920, format: "png" }, { url: "/images/image-1920w.webp", width: 1920, format: "webp" }, { url: "/images/image-2048w.png", width: 2048, format: "png" }, { url: "/images/image-2048w.webp", width: 2048, format: "webp" }, { url: "/images/image-3840w.png", width: 3840, format: "png" }, { url: "/images/image-3840w.webp", width: 3840, format: "webp" }], s = {
  imageTypes: ["png", "webp"],
  availableWidths: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
  aspectRatio: 2,
  imageUrlFor(i, a) {
    var m;
    return (m = r(o, i, a ?? "png")) == null ? void 0 : m.url;
  }
};
console.log(s);
"
`;
